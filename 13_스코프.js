//스코프란
/*
스코프는 유효범위임, 즉 매개변수의 유효범위가 어디까지인지?

var 키워드로 선언한 변수와 let, const로 선언한 변수의 스코프는 다르게 동작한다.
변수는 자신이 선언된 위치에 의해 자신이 유효한 범위가 결정된다.

=> 모든 식별자(변수 이름, 함수 이름, 클래스 이름 등)는 자신이 선언된 위치에 의해 다른 코드가 식별자 자신을 참조할 수 있는 유효 범위가 결정된다.
   식별자가 유효한 범위를 스코프라고 한다.
 */
var x = 'global';
function foo(){
    var x = 'local';
    console.log(x);     //local 출력
}
foo();
console.log(x);         //global 출력

//식별자 결정
/*
위의 예제에서, x 변수가 2개 존재한다. 이 때, 자바스크립트 엔진은 어떤 변수를 참조해야 할 것인지 결정해야 한다.
결정할 때는 스코프를 통해 결정한다. 따라서 스코프는 자바스크립트 엔진이 식별자를 검색할 때 사용하는 규칙이라고도 할 수 있다.

엔진은 코드의 문맥을 고려한다.
렉시컬 환경 : 코드가 어디서 실행되며 주변에 어떤 코드가 있는지 -> 코드의 문맥은 렉시컬 환경으로 이루어진다.
실행 컨텍스트 : 이를 구현한 것(?) -> 모든 코드는 실행 컨텍스트에서 평가되고 실행된다.

위의 예제에서 변수 x 2개는 이름은 같지만, 스코프가 다른 별개의 변수다.
 */